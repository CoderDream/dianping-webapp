{"version":3,"sources":["redux/modules/entities/orders.js","utils/request.js","redux/middleware/api.js","utils/url.js","redux/modules/entities/products.js","redux/modules/entities/shops.js","redux/modules/entities/keywords.js","redux/modules/login.js","redux/modules/entities/comments.js","redux/modules/detail.js","redux/modules/searchResult.js","redux/modules/user.js","redux/modules/home.js","redux/modules/search.js","redux/modules/purchase.js","components/ErrorToast/index.js","redux/modules/app.js","containers/PrivateRoute/index.js","utils/AsyncComponent.js","containers/App/index.js","redux/modules/entities/index.js","redux/modules/index.js","redux/store.js","index.js"],"names":["schema","name","id","TO_PAY_TYPE","AVAILABLE_TYPE","REFUND_TYPE","orderIdCounter","types","ADD_ORDER","DELETE_ORDER","ADD_COMMENT","actions","addOrder","order","orderId","concat","type","Object","D_code_react_dianping_webapp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","deleteOrder","addComment","commentId","reducer","state","arguments","length","undefined","action","D_code_react_dianping_webapp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","_action$orderId","D_code_react_dianping_webapp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","map","_toPropertyKey","response","orders","getAllOrders","entities","headers","Headers","Accept","Content-Type","handleResponce","url","responce","res","status","json","console","error","Promise","reject","message","fetchData","endpoint","fetch","method","then","catch","data","normalizeData","_ref","kvObj","ids","Array","isArray","forEach","item","push","defineProperty","FETCH_DATA","__webpack_exports__","store","next","callAPI","Error","every","actionWith","finalAction","objectSpread","_types","slicedToArray","requestType","succesType","failureType","getProductList","rowIndex","pageSize","getProductDetail","getRelatedShop","getPopularKeywords","getRelatedKeywords","text","getSearchResult","keyword","getOrders","products","D_code_react_dianping_webapp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","product","detail","purchaseNotes","shops","getShopById","keywords","getKeywordById","initState","username","localStorage","getItem","password","isFetching","login","dispatch","getState","_getState$login","loginFailure","loginRequst","resolve","setTimeout","setItem","loginSuccess","logout","removeItem","setUsername","setPassword","getLoginUsername","getLoginPasswrod","passwrod","getLoginStatus","comment","D_code_react_dianping_webapp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","D_code_react_dianping_webapp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","comments","FETCH_PRODUCT_REQUEST","FETCH_PRODUCT_SUCCESS","FETCH_PRODUCT_FAILURE","FETCH_SHOP_REQUEST","FETCH_SHOP_SUCCESS","FETCH_SHOP_FAILURE","relatedShop","loadProductDetail","getProduct","FETCH_PRODUCT_DETAIL_SUCCESS","fetchProductDetail","loadRelatedShop","fetchRelatedShop","productSchema","_ref2","shopSchema","combineReducers","shopId","nearestShop","searchResult","loadSearchResult","keywordId","fetchSearchResult","reducerById","getSearchShops","search","historyKeywords","typeToKey","_typeToKey","loaded","toPayIds","availableIds","refundIds","currentTab","currentOrder","isDeleting","isCommenting","stars","commentTip","loadOrders","user","fetchOrders","setCurrentTab","index","removeOrder","deleteOrderRequest","deleteOrderSuccess","orderActinos","showDeleteDialog","hideDeleteDialog","showCommentArea","hideCommentArea","setCommentContent","setStars","submitComment","postCommentRequest","_getState$user$curren","commentObj","Date","content","postCommentSuccess","commentActions","showCommentTip","hideCommentTip","filter","orderTypes","key","getCurrentTab","getCommentTip","createSelector","tabIndex","userOrders","getDeletingOrderId","getCommentingOrderId","getCurrentOrderComment","getCurrmentOrderStars","params","likes","pageCount","discounts","loadLikes","home","fetchLikes","loadDiscounts","fetchDiscounts","getLikes","getDiscounts","getPageCountOfLikes","inputText","popularKeywords","relatedKeywords","loadPopularKeywords","fetchPopularKeywords","loadRelatedKeywords","fetchRelatedKeywords","setInputText","clearInputText","addHistoryKeyword","clearHistoryKeywords","D_code_react_dianping_webapp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_2__","relatedKeywordsByText","D_code_react_dianping_webapp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","getInputText","trim","getHistoryKeywords","quantity","showTip","setOrderQuantity","closeTip","submitOrder","productId","resovle","purchase","totalPrice","currentPrice","toFixed","text1","text2","validityPeriod","title","shop","orderPicUrl","picture","channel","statusText","orderActions","getPurchaseQuantity","getTipStatus","ErrorToast","msg","this","props","react_default","a","createElement","className","_this","timer","clearError","clearTimeout","Component","getError","app","PrivateRoute","_this$props","component","rest","objectWithoutProperties","react_router","assign","render","to","pathname","from","location","connect","asyncComponent","importComponent","_Component","AsyncComponent","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","inherits","createClass","value","C","_this2","mod","setState","default","Home","all","__webpack_require__","e","bind","ProductDetail","Search","SearchResult","Login","User","Purchase","App","appActions","react_router_dom","path","containers_PrivateRoute","components_ErrorToast","bindActionCreators","rootReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","api","ReactDOM","es","containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.e24f049d.chunk.js","sourcesContent":["export const schema = {\n    name: 'orders',\n    id: 'id'\n}\n\n// 导出几个常量\nexport const USED_TYPE = 1 // 已消费\nexport const TO_PAY_TYPE = 2 // 代付款\nexport const AVAILABLE_TYPE = 3 // 可使用\nexport const REFUND_TYPE = 4 // 退款\n\nlet orderIdCounter = 10;\n\nexport const types = {\n    // 新增订单\n    ADD_ORDER: 'ORDER/ADD_ORDER',\n    //删除订单\n    DELETE_ORDER: 'ORDER/DELETE_ORDER',\n    ADD_COMMENT: 'ORDER/ADD_COMMENT'\n}\n\nexport const actions = {\n    // 新增订单\n    addOrder: order =>{\n        const orderId = `o-${orderIdCounter++}`\n        return {\n            type: types.ADD_ORDER,\n            orderId,\n            order: {\n                ...order,\n                id: orderId\n            }\n        }\n    },\n    // 删除订单\n    deleteOrder: orderId => ({\n        type: types.DELETE_ORDER,\n        orderId\n    }),\n    // 新增评论\n    addComment: (orderId, commentId) => ({\n        type: types.ADD_COMMENT,\n        orderId,\n        commentId\n    })\n}\n\nconst reducer = (state = {}, action) => {\n    if (action.type === types.ADD_ORDER) {\n        return {\n            ...state,\n            [action.orderId]: action.order\n        }\n    } else if (action.type === types.DELETE_ORDER) {\n        const {[action.orderId]: deleteOrder, ...restOrders} = state\n        return restOrders\n    } else if (action.type === types.ADD_COMMENT) {\n        // 在该订单中，新增评论字段\n        return {\n            ...state,\n            [action.orderId]: {\n                ...state[action.orderId],\n                commentId: action.commentId\n            }\n        }\n    } else if (action.response && action.response.orders) {\n        // 外部影响，实体组件如果存在响应，也应该进行更新\n        return { ...state, ...action.response.orders }\n    }\n    return state\n}\n\nexport default reducer\n\nexport const getOrderById = (state, id) => {\n    return state.entities.orders[id]\n}\n\nexport const getAllOrders = (state) => state.entities.orders\n","const headers = new Headers({\r\n    'Accept': 'application/json',\r\n    'Content-Type': 'application/json'\r\n})\r\n\r\nfunction get(url) {\r\n    return fetch(url, {\r\n        method: 'GET',\r\n        headers: headers\r\n    }).then(responce => {\r\n        return handleResponce(url, responce)\r\n    }).catch(error => {\r\n        console.error(`GET Request fail. url:${url}. message:${error}`)\r\n        return Promise.reject({\r\n            error: {\r\n                message: 'GET Request failed.'\r\n            }\r\n        })\r\n    })\r\n}\r\n\r\nfunction post(url, data) {\r\n    return fetch(url, {\r\n        method: 'POST',\r\n        headers: headers,\r\n        data: data\r\n    })\r\n        .then(responce => {\r\n            return handleResponce(url, responce)\r\n        })\r\n        .catch(error => {\r\n            console.error(`POST Request fail. url:${url}. message:${error}`)\r\n            return Promise.reject({\r\n                error: {\r\n                    message: 'POST Request failed.'\r\n                }\r\n            })\r\n        })\r\n}\r\n\r\nfunction handleResponce(url, responce) {\r\n    let res = responce\r\n    if (res.status === 200) {\r\n        return res.json()\r\n    } else {\r\n        console.error(`Request fail. url:${url}`)\r\n        Promise.reject({\r\n            error: {\r\n                message: 'Request failed due to server error'\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport {\r\n    get,\r\n    post\r\n}","import { get } from '../../utils/request'\r\n\r\n// 执行网络请求\r\nconst fetchData = (endpoint, schema) => {\r\n    // console.log('第二步，开始发送网络请求，地址：', endpoint)\r\n    return get(endpoint).then(data => {\r\n        // console.log('第三步，请求data成功', data)\r\n        return normalizeData(data, schema)\r\n    })\r\n}\r\n\r\n/*\r\n范式化数据，将获取到的json按照normalizr的方式，来规范\r\nschema类似于数据表\r\n\r\n范式化前\r\nproduct.json = [\r\n    {id: 'p-1', price: 19.9, ...},\r\n    {id: 'p-2', price: 29.9, ...},\r\n    {id: 'p-3', price: 39.9, ...},\r\n    ...\r\n]\r\n\r\n范式化后\r\n{\r\n    product: {\r\n        'p-1': {id: 'p-1', price: 19.9, ...},\r\n        'p-2': {id: 'p-2', price: 29.9, ...},\r\n        'p-3': {id: 'p-3', price: 39.9, ...},\r\n        ...\r\n    },\r\n    ids: ['p-1', 'p-2'] // 保证有序性\r\n}\r\n\r\n在 reducer 中捕获entities.product的变化, 更新entities\r\n在 Likes组件(发起action的组件)的 reducer中维护ids的变化\r\n*/\r\nconst normalizeData = (data, schema) => {\r\n    const { id, name } = schema\r\n    let kvObj = {}\r\n    let ids = []\r\n    if (Array.isArray(data)) {\r\n        data.forEach(item => {\r\n            kvObj[item[id]] = item\r\n            ids.push(item[id])\r\n        })\r\n    } else {\r\n        kvObj[data[id]] = data\r\n        ids.push(data[id])\r\n    }\r\n    // console.log('第四步：扁平化后data数据：', newOjb)\r\n    return {\r\n        [name]: kvObj,\r\n        ids\r\n    }\r\n}\r\n\r\n// 经过中间件处理的action所具有的标识\r\nexport const FETCH_DATA = 'FETCH DATA'\r\n\r\nexport default store => next => action => {\r\n    // 判断给action是否需要该中间件处理\r\n    const callAPI = action[FETCH_DATA]\r\n    \r\n    if (typeof callAPI === 'undefined') {\r\n        return next(action)\r\n    }\r\n    // console.log(\"第一步：callAPI中间件开始处理action\", callAPI)\r\n    // 派发的action必须有着三个属性\r\n    const { endpoint, schema, types } = callAPI\r\n    if (typeof endpoint !== 'string') {\r\n        throw new Error('endpoint必须是字符串类型的URL')\r\n    }\r\n    if (!schema) {\r\n        throw new Error('必须指定领域实体的schema')\r\n    }\r\n    if (!Array.isArray(types) && types.length !== 3) {\r\n        throw new Error('必须指定一个包含了三个action type的数组')\r\n    }\r\n    if (!types.every(type => typeof type === 'string')) {\r\n        throw new Error('action type必须为字符串')\r\n    }\r\n\r\n    // 这个函数是为了处理带额外参数的action\r\n    const actionWith = data => {\r\n        const finalAction = {...action, ...data}\r\n        // 删除action标识\r\n        delete finalAction[FETCH_DATA]\r\n        return finalAction\r\n    }\r\n    // 三种类型对应着三种请求\r\n    const [requestType, succesType, failureType] = types\r\n    // 异步请求中\r\n    next(actionWith({ type: requestType }))\r\n\r\n    return fetchData(endpoint, schema).then(\r\n        response => {\r\n            // console.log('第五步，最终dispatch的数据', actionWith({\r\n            //     type: succesType,\r\n            //     response\r\n            // }))\r\n            next(actionWith({\r\n                type: succesType,\r\n                response\r\n            }))\r\n        },\r\n        // 请求失败\r\n        error =>\r\n            next(actionWith({\r\n                type: failureType,\r\n                error: error.message || '获取数据失败'\r\n            }))\r\n    )\r\n}\r\n","export default {\r\n    // 获取产品列表\r\n    getProductList: (types, rowIndex, pageSize) => `/mock/products/${types}.json?rowIndex=${rowIndex}&pageSize=${pageSize}`,\r\n    // 通过产品id获取产品详情\r\n    getProductDetail: (id) => `/mock/products_detail/${id}.json`,\r\n    // 通过产品id获取相关商家信息\r\n    getRelatedShop: (id) => `/mock/shops/${id}.json`,\r\n    // 获取流行关键字\r\n    getPopularKeywords: () => `/mock/keywords/popular.json`,\r\n    // 通过输入的信息获取关键字\r\n    getRelatedKeywords: (text) => `/mock/keywords/related.json?keyword=${text}`,\r\n    // 通过关键字获取商家列表\r\n    getSearchResult: (keyword) => `/mock/shops/related.json?keyword=${keyword}`,\r\n    // 获取个人订单列表\r\n    getOrders: () => `/mock/orders/orders.json`\r\n}","export const schema = {\n    name: 'products',\n    id: 'id'\n}\n\nconst reducer = (state = {}, action) => {\n    // 外部影响，实体组件如果存在响应，也应该进行更新\n    if (action.response && action.response.products) {\n        return { ...state, ...action.response.products }\n    }\n    return state\n}\n\nexport default reducer\n\nexport const getProductDetail = (state, id) => {\n    const product = state.entities.products[id]\n    // 如果product包含详情数据，那么返回product，否则返回空\n    if (product && product.detail && product.purchaseNotes) {\n        return product\n    } else {\n        return null\n    }\n}","export const schema = {\n    id: 'id',\n    name: 'shops'\n}\n\nconst reducer = (state = {}, action) => {\n    // 外部影响，实体组件如果存在响应，也应该进行更新\n    if (action.response && action.response.shops) {\n        return { ...state, ...action.response.shops }\n    }\n    return state\n}\n\nexport default reducer\n\nexport const getShopById = (state, id) => {\n    return state.entities.shops[id]\n}","export const schema = {\r\n    name: 'keywords',\r\n    id: 'id'\r\n}\r\n\r\nconst reducer = (state = {}, action) => {\r\n    // 外部影响，实体组件如果存在响应，也应该进行更新\r\n    if (action.response && action.response.keywords) {\r\n        return { ...state, ...action.response.keywords }\r\n    }\r\n    return state\r\n}\r\n\r\nexport default reducer\r\n\r\nexport const getKeywordById = (state, id) => {\r\n    if (!id) return null\r\n\r\n    const keyword = state.entities.keywords[id]\r\n    if (keyword) {\r\n        return keyword\r\n    } else {\r\n        return null\r\n    }\r\n}\r\n\r\nexport const getKeywordByText = (state, text) => {\r\n    const result = []\r\n    const keywords = state.entities.keywords\r\n    for (const id in keywords) {\r\n        if (keywords.hasOwnProperty(id)) {\r\n            const keyword = keywords[id];\r\n            if (keyword.includes(text)) {\r\n                result.push(keyword)\r\n            }\r\n        }\r\n    }\r\n    return result\r\n}","const initState = {\r\n    username: localStorage.getItem('username') || '',\r\n    password: '',\r\n    isFetching: '',\r\n    status: localStorage.getItem('status') || false,\r\n}\r\n\r\nexport const types = {\r\n    LOGIN_REQUEST: 'LOGIN/LOGIN_REQUEST',\r\n    LOGIN_SUCCESS: 'LOGIN/LOGIN_SUCCESS',\r\n    LOGIN_FAILUER: 'LOGIN/LOGIN_FAILUER',\r\n    LOGOUT: 'LOGIN/LOGOUT',\r\n    SET_USERNAME: 'LOGIN/SET_USERNAME',\r\n    SET_PASSWORD: 'LOGIN/SET_PASSWORD'\r\n}\r\n\r\nexport const actions = {\r\n    login: () => {\r\n        return (dispatch, getState) => {\r\n            const { username, password } = getState().login\r\n            if (!username || username.length <= 0 || !password || password.length <= 0) {\r\n                return dispatch(loginFailure('用户名和密码不能为空'))\r\n            }\r\n            dispatch(loginRequst())\r\n            return new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                    localStorage.setItem('username', username)\r\n                    localStorage.setItem('status', true)\r\n                    dispatch(loginSuccess())\r\n                    resolve()\r\n                }, 1000)\r\n            })\r\n        }\r\n    },\r\n    logout: () => {\r\n        localStorage.removeItem('username');\r\n        localStorage.removeItem('status');\r\n        return {\r\n            type: types.LOGOUT\r\n        }\r\n    },\r\n    setUsername: (username) => ({\r\n        type: types.SET_USERNAME,\r\n        username\r\n    }),\r\n    setPassword: (password) => ({\r\n        type: types.SET_PASSWORD,\r\n        password\r\n    })\r\n}\r\n\r\nconst loginRequst = () => ({\r\n    type: types.LOGIN_REQUEST,\r\n})\r\n\r\nconst loginSuccess = () => ({\r\n    type: types.LOGIN_SUCCESS,\r\n    status: true\r\n})\r\n\r\nconst loginFailure = (error) => ({\r\n    type: types.LOGIN_FAILUER,\r\n    error\r\n})\r\n\r\nconst reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case types.LOGIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                isFetching: true,\r\n            }\r\n        case types.LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                status: true,\r\n                username: action.username,\r\n                password: action.password\r\n            }\r\n        case types.LOGIN_FAILUER: \r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        case types.LOGOUT:\r\n            return {\r\n                ...state,\r\n                status: false,\r\n            }\r\n        case types.SET_USERNAME:\r\n            return {\r\n                ...state,\r\n                username: action.username\r\n            }\r\n        case types.SET_PASSWORD:\r\n            return {\r\n                ...state,\r\n                password: action.password\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer\r\n\r\n// selectors\r\nexport const getLoginUsername = (state) => state.login.username\r\nexport const getLoginPasswrod = (state) => state.login.passwrod\r\nexport const getLoginStatus = (state) => state.login.status","export const schema = {\n    name: 'comments',\n    id: 'id'\n}\n\nexport const types = {\n    // 新增评论\n    ADD_COMMENT: 'COMMENT/ADD_COMMENT'\n}\n\nexport const actions = {\n    addComment: (comment) => ({\n        type: types.ADD_COMMENT,\n        comment\n    })\n}\n\nconst reducer = (state = {}, action) => {\n    if (action.type === types.ADD_COMMENT) {\n        return {\n            ...state,\n            [action.comment.id]: action.comment\n        }\n    } else if (action.response && action.response.comments) {\n        // 外部影响，实体组件如果存在响应，也应该进行更新\n        return { ...state, ...action.response.comments }\n    }\n    return state\n}\n\nexport default reducer","import url from \"../../utils/url\";\nimport { combineReducers } from 'redux'\nimport { schema as productSchema, getProductDetail } from './entities/products'\nimport { schema as shopSchema, getShopById } from './entities/shops'\nimport { FETCH_DATA } from '../middleware/api'\n\n// actionTypes\nexport const types = {\n    // 获取产品详情信息\n    FETCH_PRODUCT_REQUEST: 'DETAIL/FETCH_PRODUCT_REQUEST',\n    FETCH_PRODUCT_SUCCESS: 'DETAIL/FETCH_PRODUCT_SUCCESS',\n    FETCH_PRODUCT_FAILURE: 'DETAIL/FETCH_PRODUCT_FAILURE',\n\n    // 获取相关商家信息\n    FETCH_SHOP_REQUEST: 'DETAIL/FETCH_SHOP_REQUEST',\n    FETCH_SHOP_SUCCESS: 'DETAIL/FETCH_SHOP_SUCCESS',\n    FETCH_SHOP_FAILURE: 'DETAIL/FETCH_SHOP_FAILURE',\n}\n\n// state\nconst initState = {\n    product: {\n        isFetching: false,\n        id: null\n    },\n    relatedShop: {\n        isFetching: false,\n        id: null\n    }\n}\n\n// actions\nexport const actions = {\n    loadProductDetail: (id) => {\n        return (dispatch, getState) => {\n            // 如果产品已经获取过了，就不用再重复发送请求，使用缓存\n            const product = getProduct(getState(), id)\n            if (product) {\n                return dispatch((id) => ({\n                    type: types.FETCH_PRODUCT_DETAIL_SUCCESS,\n                    id\n                }))\n            }\n            const endpoint = url.getProductDetail(id)\n            return dispatch(fetchProductDetail(endpoint, id))\n        }\n    },\n    loadRelatedShop: (id) => {\n        return (dispatch, getState) => {\n            // 如果商家已经获取过了，就不用再重复发送请求，使用缓存\n            const relatedShop = getRelatedShop(getState(), id)\n            if (relatedShop) {\n                return dispatch({\n                    type: types.FETCH_SHOP_SUCCESS,\n                    id\n                })\n            }\n            const endpoint = url.getRelatedShop(id)\n            return dispatch(fetchRelatedShop(endpoint, id))\n        }\n    }\n}\n\nconst fetchProductDetail = (endpoint, id) => ({\n    [FETCH_DATA]: {\n        types: [\n            types.FETCH_PRODUCT_REQUEST,\n            types.FETCH_PRODUCT_SUCCESS,\n            types.FETCH_PRODUCT_FAILURE\n        ],\n        endpoint,\n        schema: productSchema\n    },\n    id\n})\n\nconst fetchRelatedShop = (endpoint, id) => ({\n    [FETCH_DATA]: {\n        types: [\n            types.FETCH_SHOP_REQUEST,\n            types.FETCH_SHOP_SUCCESS,\n            types.FETCH_SHOP_FAILURE\n        ],\n        endpoint,\n        schema: shopSchema\n    },\n    id\n})\n\n\n\n// reducer\nconst product = (state = initState.product, action) => {\n    switch (action.type) {\n        case types.FETCH_PRODUCT_REQUEST:\n            return {\n                ...state,\n                isFetching: true\n            }\n        case types.FETCH_PRODUCT_SUCCESS:\n            return {\n                ...state,\n                isFetching: false,\n                id: action.id\n            }\n        case types.FETCH_PRODUCT_FAILURE:\n            return {\n                ...state,\n                isFetching: false,\n                id: null\n            }\n        default:\n            return state\n    }\n}\n\nconst relatedShop = (state = initState.relatedShop, action) => {\n    switch (action.type) {\n        case types.FETCH_SHOP_REQUEST:\n            return {\n                ...state,\n                isFetching: true\n            }\n        case types.FETCH_SHOP_SUCCESS:\n            return {\n                ...state,\n                isFetching: false,\n                id: action.id\n            }\n        case types.FETCH_SHOP_FAILURE:\n            return {\n                ...state,\n                isFetching: false,\n                id: null\n            }\n        default:\n            return state\n    }\n}\n\nconst reducer = combineReducers({\n    product,\n    relatedShop\n})\n\nexport default reducer\n\n// selectors\nexport const getProduct = (state, id) => {\n    return getProductDetail(state, id)\n}\n\nexport const getRelatedShop = (state, id) => {\n    const product = state.entities.products[id]\n    if (!product) return null\n    const shopId = product.nearestShop\n    if (shopId) {\n        return getShopById(state, shopId)\n    } else {\n        return null\n    }\n}","import url from \"../../utils/url\";\r\nimport { schema } from './entities/shops'\r\nimport { FETCH_DATA } from '../middleware/api'\r\nimport { getShopById } from \"./entities/shops\";\r\n\r\nexport const types = {\r\n    // 搜索结果页\r\n    FETCH_SEARCH_RESULT_REQUEST: 'SEARCH/FETCH_SEARCH_RESULT_REQUEST',\r\n    FETCH_SEARCH_RESULT_SUCCESS: 'SEARCH/FETCH_SEARCH_RESULT_SUCCESS',\r\n    FETCH_SEARCH_RESULT_FAILURE: 'SEARCH/FETCH_SEARCH_RESULT_FAILURE',\r\n}\r\n\r\nconst initState = {\r\n    /**\r\n     * searchResult结构\r\n     * {\r\n     *     'keywordid': {\r\n     *          isFetching,\r\n     *          ids\r\n     *      }\r\n     * }\r\n     */\r\n    searchResult: {}\r\n}\r\n\r\nexport const actions = {\r\n    //\r\n    loadSearchResult: (keywordId) => {\r\n        return (dispatch, getState) => {\r\n            // 如果该关键词已经请求过，就不必重复请求\r\n            const keywords = getState().searchResult\r\n            if (keywords[keywordId]) {\r\n                return null\r\n            }\r\n            const endpoint = url.getSearchResult(keywordId)\r\n            return dispatch(fetchSearchResult(endpoint, keywordId))\r\n        }\r\n    }\r\n}\r\n\r\nconst fetchSearchResult = (endpoint, keywordId) => ({\r\n    [FETCH_DATA]: {\r\n        types: [\r\n            types.FETCH_SEARCH_RESULT_REQUEST,\r\n            types.FETCH_SEARCH_RESULT_SUCCESS,\r\n            types.FETCH_SEARCH_RESULT_FAILURE\r\n        ],\r\n        endpoint,\r\n        schema\r\n    },\r\n    keywordId\r\n})\r\n\r\nconst reducer = (state = initState.searchResult, action) => {\r\n    switch (action.type) {\r\n        case types.FETCH_SEARCH_RESULT_REQUEST:\r\n        case types.FETCH_SEARCH_RESULT_SUCCESS:\r\n        case types.FETCH_SEARCH_RESULT_FAILURE:\r\n            return {\r\n                ...state,\r\n                [action.keywordId]: reducerById(state[action.keywordId], action)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst reducerById = (state = {\r\n    isFetching: false,\r\n    ids: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case types.FETCH_SEARCH_RESULT_REQUEST:\r\n            return {\r\n                ...state,\r\n                isFetching: true,\r\n            }\r\n        case types.FETCH_SEARCH_RESULT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                ids: state.ids.concat(action.response.ids)\r\n            }\r\n        case types.FETCH_SEARCH_RESULT_FAILURE:\r\n            return {\r\n                ...state,\r\n                isFetching: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer\r\n\r\n// selectors\r\nexport const getSearchShops = (state) => {\r\n    // 从历史记录的第一位中拿到当前搜索关键字\r\n    const keywordId = state.search.historyKeywords[0]\r\n    if (!keywordId) {\r\n        return []\r\n    }\r\n    const shops = state.searchResult[keywordId]\r\n    if (!shops) {\r\n        return []\r\n    }\r\n    const result = shops.ids.map(id => {\r\n        return getShopById(state, id)\r\n    })\r\n    return result\r\n}","import url from '../../utils/url'\r\nimport {\r\n    schema,\r\n    TO_PAY_TYPE,\r\n    AVAILABLE_TYPE,\r\n    REFUND_TYPE,\r\n    actions as orderActinos,\r\n    types as orderTypes,\r\n    getAllOrders\r\n} from './entities/orders'\r\nimport { actions as commentActions } from './entities/comments'\r\n\r\nimport { FETCH_DATA } from '../middleware/api'\r\nimport { combineReducers } from 'redux'\r\nimport { createSelector } from 'reselect';\r\n\r\n// 建立orderType与state中key的映射\r\nconst typeToKey = {\r\n    [TO_PAY_TYPE]: 'toPayIds',\r\n    [AVAILABLE_TYPE]: 'availableIds',\r\n    [REFUND_TYPE]: 'availableIds'\r\n}\r\n\r\nconst initState = {\r\n    orders: {\r\n        isFetching: false,\r\n        loaded: false, // 标记用户原来的订单是否被加载\r\n        ids: [],\r\n        toPayIds: [], // 待付款的订单id\r\n        availableIds: [], // 可使用的订单id\r\n        refundIds: [] // 退款订单id\r\n    },\r\n    currentTab: 0, // 维护 选中tab\r\n    // 维护订单信息\r\n    currentOrder: {\r\n        id: null,\r\n        isDeleting: false,\r\n        isCommenting: false,\r\n        comment: '',\r\n        stars: 0,\r\n        commentTip: false, // 显示提交评论是否成功的提示框\r\n    },\r\n}\r\n\r\n// actionTypes\r\nexport const types = {\r\n    // 获取订单列表\r\n    FETCH_ORDERS_REQUEST: 'USER/FETCH_ORDERS_REQUEST',\r\n    FETCH_ORDERS_SUCCESS: 'USER/FETCH_ORDERS_SUCCESS',\r\n    FETCH_ORDERS_FAILURE: 'USER/FETCH_ORDERS_FAILURE',\r\n    // 设置当前选择的Tab\r\n    SET_CURRENT_TAB: 'USER/SET_CURRENT_TAB',\r\n    // 删除订单\r\n    DELETE_ORDER_REQUEST: 'USER/DELETE_ORDER_REQUEST',\r\n    DELETE_ORDER_SUCCESS: 'USER/DELETE_ORDER_SUCCESS',\r\n    DELETE_ORDER_FAILURE: 'USER/DELETE_ORDER_FAILURE',\r\n    // 删除确认对话框\r\n    SHOW_DELETE_ORDER: 'USER/SHOW_DELETE_ORDER',\r\n    HIDE_DELETE_ORDER: 'USER/HIDE_DELETE_ORDER',\r\n    // 评价订单编辑\r\n    SHOW_COMMENT_AREA: 'USER/SHOW_COMMENT_AREA',\r\n    HIDE_COMMENT_AREA: 'USER/HIDE_COMMENT_AREA',\r\n    SET_COMMENT_CONTENT: 'USER/SET_COMMENT_CONTENT',\r\n    SET_STARS: 'USER/SET_STARS',\r\n    // 提交评价\r\n    POST_COMMENT_REQUEST: 'USER/POST_COMMENT_REQUEST',\r\n    POST_COMMENT_SUCCESS: 'USER/POST_COMMENT_SUCCESS',\r\n    POST_COMMENT_FAILURE: 'USER/POST_COMMENT_FAILURE',\r\n    // 评论数据提交的对话框\r\n    SHOW_COMMENT_TIP: 'USER/SHOW_COMMENT_TIP',\r\n    HIDE_COMMENT_TIP: 'USER/HIDE_COMMENT_TIP'\r\n}\r\n\r\n// actionCreators\r\nexport const actions = {\r\n    // 加载订单列表\r\n    loadOrders: () => {\r\n        return (dispatch, getState) => {\r\n            const { loaded } = getState().user.orders\r\n            if (loaded) {\r\n                return null\r\n            }\r\n            const endpoint = url.getOrders()\r\n            return dispatch(fetchOrders(endpoint))\r\n        }\r\n    },\r\n    // 通过下标设置选中的tab\r\n    setCurrentTab: index => ({\r\n        type: types.SET_CURRENT_TAB,\r\n        index\r\n    }),\r\n    // 删除订单\r\n    removeOrder: () => {\r\n        return (dispatch, getState) => {\r\n            const { id } = getState().user.currentOrder\r\n            if (id) {\r\n                dispatch(deleteOrderRequest())\r\n                new Promise((resolve, reject) => {\r\n                    setTimeout(() => {\r\n                        // 不仅要删除user模块下的订单\r\n                        // 也要删除实体模块order下的订单\r\n                        dispatch(deleteOrderSuccess(id))\r\n                        dispatch(orderActinos.deleteOrder(id))\r\n                        resolve()\r\n                    }, 500)\r\n                })\r\n            }\r\n        }\r\n    },\r\n    // 显示删除确认框\r\n    showDeleteDialog: orderId => ({\r\n        type: types.SHOW_DELETE_ORDER,\r\n        orderId\r\n    }),\r\n    // 隐藏删除确认框\r\n    hideDeleteDialog: () => ({\r\n        type: types.HIDE_DELETE_ORDER\r\n    }),\r\n    // 显示评价区域框\r\n    showCommentArea: orderId => ({\r\n        type: types.SHOW_COMMENT_AREA,\r\n        orderId\r\n    }),\r\n    // 隐藏评价区域框\r\n    hideCommentArea: () => ({\r\n        type: types.HIDE_COMMENT_AREA\r\n    }),\r\n    // 设置评价内容\r\n    setCommentContent: comment => ({\r\n        type: types.SET_COMMENT_CONTENT,\r\n        comment\r\n    }),\r\n    // 设置评价星级\r\n    setStars: stars => ({\r\n        type: types.SET_STARS,\r\n        stars\r\n    }),\r\n    // 提交评价\r\n    submitComment: () => {\r\n        return (dispatch, getState) => {\r\n            dispatch(postCommentRequest())\r\n            return new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                    const { id, stars, comment } = getState().user.currentOrder\r\n                    const commentObj = {\r\n                        id: +new Date(),\r\n                        stars,\r\n                        content: comment\r\n                    }\r\n                    dispatch(postCommentSuccess())\r\n                    // 更新订单表中 订单的id字段，只需要传id即可\r\n                    dispatch(orderActinos.addComment(id, commentObj.id))\r\n                    // 更新评论表中的评论，需要传入评论对象\r\n                    dispatch(commentActions.addComment(commentObj))\r\n                    resolve()\r\n                })\r\n            })\r\n        }\r\n    },\r\n    // 显示对话框\r\n    showCommentTip: () => ({\r\n        type: types.SHOW_COMMENT_TIP\r\n    }),\r\n    // 隐藏对话框\r\n    hideCommentTip: () => ({\r\n        type: types.HIDE_COMMENT_TIP\r\n    })\r\n}\r\n\r\nconst fetchOrders = endpoint => ({\r\n    [FETCH_DATA]: {\r\n        types: [\r\n            types.FETCH_ORDERS_REQUEST,\r\n            types.FETCH_ORDERS_SUCCESS,\r\n            types.FETCH_ORDERS_FAILURE\r\n        ],\r\n        endpoint,\r\n        schema\r\n    }\r\n})\r\n\r\nconst deleteOrderRequest = () => ({\r\n    type: types.DELETE_ORDER_REQUEST\r\n})\r\n\r\nconst deleteOrderSuccess = orderId => ({\r\n    type: types.DELETE_ORDER_SUCCESS,\r\n    orderId\r\n})\r\n\r\nconst postCommentRequest = () => ({\r\n    type: types.POST_COMMENT_REQUEST\r\n})\r\n\r\nconst postCommentSuccess = () => ({\r\n    type: types.POST_COMMENT_SUCCESS\r\n})\r\n\r\n// reducers\r\nconst orders = (state = initState.orders, action) => {\r\n    switch (action.type) {\r\n        case types.FETCH_ORDERS_REQUEST:\r\n            return {\r\n                ...state,\r\n                isFetching: true\r\n            }\r\n        case types.FETCH_ORDERS_SUCCESS:\r\n            const res = action.response\r\n            // 筛选出待付款的订单\r\n            const toPayIds = res.ids.filter(\r\n                id => res.orders[id].type === TO_PAY_TYPE\r\n            )\r\n            const availableIds = res.ids.filter(\r\n                id => res.orders[id].type === AVAILABLE_TYPE\r\n            )\r\n            const refundIds = res.ids.filter(\r\n                id => res.orders[id].type === REFUND_TYPE\r\n            )\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                loaded: true,\r\n                ids: state.ids.concat(res.ids),\r\n                toPayIds: state.toPayIds.concat(toPayIds),\r\n                availableIds: state.availableIds.concat(availableIds),\r\n                refundIds: state.refundIds.concat(refundIds)\r\n            }\r\n        case types.FETCH_ORDERS_FAILURE:\r\n            return {\r\n                ...state,\r\n                isFetching: false\r\n            }\r\n        case orderTypes.ADD_ORDER:\r\n            // 拿到action派发过来的order\r\n            const { order } = action\r\n            // order类型 对应的state key字段\r\n            const key = typeToKey[order.type]\r\n\r\n            return key\r\n            ? {\r\n                ...state,\r\n                ids: [order.id].concat(state.ids),\r\n                [key]: [order.id].concat(state[key])\r\n              }\r\n            : {\r\n                ...state,\r\n                ids: [order.id].concat(state.ids)\r\n              };\r\n        case orderTypes.DELETE_ORDER:\r\n        case types.DELETE_ORDER_SUCCESS:\r\n            // 删除订单\r\n            return {\r\n                ...state,\r\n                ids: state.ids.filter(id => id !== action.orderId),\r\n                toPayIds: state.toPayIds.filter(id => id !== action.orderId),\r\n                availableIds: state.availableIds.filter(\r\n                    id => id !== action.orderId\r\n                ),\r\n                refundIds: state.refundIds.filter(id => id !== action.orderId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst currentTab = (state = initState.currentTab, action) => {\r\n    switch (action.type) {\r\n        case types.SET_CURRENT_TAB:\r\n            return action.index\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst currentOrder = (state = initState.currentOrder, action) => {\r\n    switch (action.type) {\r\n        case types.SHOW_DELETE_ORDER:\r\n            return {\r\n                ...state,\r\n                id: action.orderId,\r\n                isDeleting: true\r\n            }\r\n        case types.SHOW_COMMENT_AREA:\r\n            return {\r\n                ...state,\r\n                id: action.orderId,\r\n                isCommenting: true\r\n            }\r\n        \r\n        case types.HIDE_COMMENT_AREA:\r\n        case types.HIDE_DELETE_ORDER:\r\n        case types.DELETE_ORDER_SUCCESS:\r\n        case types.DELETE_ORDER_FAILURE:\r\n        case types.POST_COMMENT_SUCCESS:\r\n        case types.POST_COMMENT_FAILURE:\r\n            return {\r\n                ...state,\r\n                id: null,\r\n                isDeleting: false,\r\n                isCommenting: false,\r\n                comment: '',\r\n                stars: 0,\r\n            }\r\n        \r\n        case types.SET_COMMENT_CONTENT:\r\n            return {\r\n                ...state,\r\n                comment: action.comment\r\n            }\r\n        case types.SET_STARS:\r\n            return {\r\n                ...state,\r\n                stars: action.stars\r\n            }\r\n        case types.SHOW_COMMENT_TIP:\r\n            return {\r\n                ...state,\r\n                commentTip: true\r\n            }\r\n        case types.HIDE_COMMENT_TIP:\r\n            return {\r\n                ...state,\r\n                commentTip: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst reducer = combineReducers({\r\n    orders,\r\n    currentTab,\r\n    currentOrder\r\n})\r\n\r\nexport default reducer\r\n\r\n// selectors\r\nexport const getCurrentTab = state => state.user.currentTab\r\n\r\nexport const getCommentTip = state => state.user.currentOrder.commentTip\r\n\r\nexport const getUserOrders = state => state.user.orders\r\n\r\nexport const getOrders = createSelector(\r\n    [getCurrentTab, getUserOrders, getAllOrders],\r\n    (tabIndex, userOrders, orders) => {\r\n        const tabs = ['ids', 'toPayIds', 'availableIds', 'refundIds']\r\n        // 当前选中的 tab\r\n        const tab = tabs[tabIndex]\r\n        // 拿到对应tab维护的订单数组\r\n        const ordersIds = userOrders[tab]\r\n        // 通过id 拿到order表中的数据\r\n        return ordersIds.map(id => orders[id])\r\n    }\r\n)\r\n\r\nexport const getDeletingOrderId = state => {\r\n    if (state.user.currentOrder && state.user.currentOrder.isDeleting)\r\n    return state.user.currentOrder && state.user.currentOrder.isDeleting\r\n        ? state.user.currentOrder.id\r\n        : null\r\n}\r\n\r\n// 获取正在评价的订单id\r\nexport const getCommentingOrderId = state => {\r\n    return state.user.currentOrder && state.user.currentOrder.isCommenting\r\n    ? state.user.currentOrder.id\r\n    : null\r\n}\r\n\r\n// 获取评论信息\r\nexport const getCurrentOrderComment = state => {\r\n    return state.user.currentOrder ? \r\n        state.user.currentOrder.comment : \"\"\r\n}\r\n\r\n// 获取订单评分信息\r\nexport const getCurrmentOrderStars = state => {\r\n    return state.user.currentOrder ? \r\n        state.user.currentOrder.stars : 0\r\n}","import { combineReducers } from 'redux'\nimport url from '../../utils/url'\nimport { FETCH_DATA } from '../middleware/api'\nimport { schema } from './entities/products'\n\n// 定义一些常量\nexport const params = {\n    // 猜你喜欢请求路径\n    PATH_LIKES: 'likes',\n    // 超值特惠请求路径\n    PATH_DISCOUNTS: 'discounts',\n    // 猜你喜欢一页显示数据条数\n    PAGE_SIZE_LIKES: 5,\n    // 超值特惠一页显示数据条数\n    PAGE_SIZE_DISCOUNTS: 3\n}\n\n// ActionTypes\nexport const types = {\n    // 猜你喜欢请求\n    FETCH_LIKES_REQUEST: \"HOME/FETCH_LIKES_REQUEST\", \n    // 猜你喜欢请求成功\n    FETCH_LIKES_SUCCESS: \"HOME/FETCH_LIKES_SUCCESS\", \n    // 猜你喜欢请求失败\n    FETCH_LIKES_FAILURE: \"HOME/FETCH_LIKES_FAILURE\", \n\n    // 超值特惠请求\n    FETCH_DISCOUNTS_REQUEST: \"HOME/FETCH_DISCOUNTS_REQUEST\", \n    // 超值特惠请求成功\n    FETCH_DISCOUNTS_SUCCESS: \"HOME/FETCH_DISCOUNTS_SUCCESS\", \n    // 超值特惠请求失败\n    FETCH_DISCOUNTS_FAILURE: \"HOME/FETCH_DISCOUNTS_FAILURE\", \n}\n\n// State\nconst initState = {\n    likes: {\n        isFetching: false,\n        pageCount: 0,\n        ids: []\n    },\n    discounts: {\n        isFetching: false,\n        ids: []\n    }\n}\n\n// Action\nexport const actions = {\n    loadLikes: () => {\n        return (dispatch, getState) => {\n            // 获取页码下标\n            const { pageCount } = getState().home.likes\n            // 计算该页码第一条数据的下标\n            const rowIndex = pageCount * params.PAGE_SIZE_LIKES\n            const endpoint = url.getProductList(params.PATH_LIKES, rowIndex, params.PAGE_SIZE_LIKES)\n\n            return dispatch(fetchLikes(endpoint))\n        }\n    },\n    loadDiscounts: () => {\n        return (dispatch, getState) => {\n            const { ids } = getState().home.discounts\n            // 如果store中discounts组件已经加载过数据了，就不用再重新加载\n            if (ids.length > 0) {\n                return null\n            }\n            const endpoint = url.getProductList(params.PATH_DISCOUNTS, 0, params.PAGE_SIZE_DISCOUNTS)\n            return dispatch(fetchDiscounts(endpoint))\n        }\n    }\n}\n\nconst fetchLikes = (endpoint) => ({\n    [FETCH_DATA]: {\n        types: [\n            types.FETCH_LIKES_REQUEST,\n            types.FETCH_LIKES_SUCCESS,\n            types.FETCH_LIKES_FAILURE\n        ],\n        endpoint,\n        schema\n    }\n})\n\nconst fetchDiscounts = (endpoint) => ({\n    [FETCH_DATA]: {\n        types: [\n            types.FETCH_DISCOUNTS_REQUEST,\n            types.FETCH_DISCOUNTS_SUCCESS,\n            types.FETCH_DISCOUNTS_FAILURE\n        ],\n        endpoint,\n        schema\n    }\n})\n\n// 猜你喜欢reducer\nconst likes = (state = initState.likes, action) => {\n    switch (action.type) {\n        case types.FETCH_LIKES_REQUEST:\n            return {\n                ...state,\n                isFetching: true\n            }\n        case types.FETCH_LIKES_SUCCESS:\n            return {\n                ...state,\n                isFetching: false,\n                pageCount: state.pageCount + 1,\n                ids: state.ids.concat(action.response.ids)\n            }\n        case types.FETCH_LIKES_FAILURE:\n            return {\n                ...state,\n                isFetching: false\n            }\n        default:\n            return state\n    }\n}\n\n// 超值特惠reducer\nconst discounts = (state = initState.discounts, action) => {\n    switch (action.type) {\n        case types.FETCH_DISCOUNTS_REQUEST:\n            return {\n                ...state,\n                isFetching: true\n            }\n        case types.FETCH_DISCOUNTS_SUCCESS:\n            return {\n                ...state,\n                isFetching: false,\n                ids: state.ids.concat(action.response.ids)\n            }\n        case types.FETCH_DISCOUNTS_FAILURE:\n            return {\n                ...state,\n                isFetching: false\n            }\n        default:\n            return state\n    }\n}\n\nconst reducer = combineReducers({\n    likes,\n    discounts\n})\n\nexport default reducer\n\n// selectors\n// 获取猜你喜欢state\nexport const getLikes = state => {\n    return state.home.likes.ids.map(id => {\n        return state.entities.products[id]\n    })\n}\n\n// 获取特惠商品state\nexport const getDiscounts = state => {\n    return state.home.discounts.ids.map(id => {\n        return state.entities.products[id]\n    })\n}\n\nexport const getPageCountOfLikes = state => {\n    return state.home.likes.pageCount\n}","import { combineReducers } from 'redux'\r\nimport url from '../../utils/url'\r\nimport { FETCH_DATA } from '../middleware/api'\r\nimport { schema, getKeywordById } from './entities/keywords'\r\n\r\n// action types\r\nexport const types = {\r\n    // 获取热门关键词\r\n    FETCH_POPULAR_KEYWORDS_REQUEST: 'SEARCH/FETCH_POPULAR_KEYWORDS_REQUEST',\r\n    FETCH_POPULAR_KEYWORDS_SUCCESS: 'SEARCH/FETCH_POPULAR_KEYWORDS_SUCCESS',\r\n    FETCH_POPULAR_KEYWORDS_FAILURE: 'SEARCH/FETCH_POPULAR_KEYWORDS_FAILURE',\r\n    // 根据输入的文本获取相关的关键词\r\n    FETCH_RELATED_KEYWORDS_REQUEST: 'SEARCH/FETCH_RELATED_KEYWORDS_REQUEST',\r\n    FETCH_RELATED_KEYWORDS_SUCCESS: 'SEARCH/FETCH_RELATED_KEYWORDS_SUCCESS',\r\n    FETCH_RELATED_KEYWORDS_FAILURE: 'SEARCH/FETCH_RELATED_KEYWORDS_FAILURE',\r\n    // 设置当前输入\r\n    SET_INPUT_TEXT: 'SEARCH/SET_INPUT_TEXT',\r\n    CLEAR_INPUT_TEXT: 'SEARCH/CLEAR_INPUT_TEXT',\r\n    // 历史查询记录\r\n    ADD_HISTORY_KEYWORD: 'SEARCH/ADD_HISTORY_KEYWORD',\r\n    CLEAR_HISTORY_KEYWORD: 'SEARCH/CLEAR_HISTORY_KEYWORD'\r\n}\r\n\r\nconst initState = {\r\n    inputText: '',\r\n    // 保存流行词状态\r\n    popularKeywords: {\r\n        isFetching: false,\r\n        ids: []\r\n    },\r\n    // 相关的关键字，建立关键词索引\r\n    relatedKeywords: {},\r\n    // 保存关键词id\r\n    historyKeywords: []\r\n}\r\n\r\n// action creator\r\nexport const actions = {\r\n    // 获取热门关键词\r\n    loadPopularKeywords: () => {\r\n        return (dispatch, getState) => {\r\n            // 热门关键词只请求一次\r\n            const { ids } = getState().search.popularKeywords;\r\n            if (ids.length > 0) {\r\n                return null;\r\n            }\r\n            const endpoint = url.getPopularKeywords()\r\n            return dispatch(fetchPopularKeywords(endpoint))\r\n        }\r\n    },\r\n    // 根据输入的内容获取相关关键词\r\n    loadRelatedKeywords: text => {\r\n        return (dispatch, getState) => {\r\n            // 查询关键词索引是否建立\r\n            const { relatedKeywords } = getState().search\r\n            if (relatedKeywords[text]) {\r\n                return null\r\n            }\r\n            const endpoint = url.getRelatedKeywords()\r\n            return dispatch(fetchRelatedKeywords(endpoint, text))\r\n        }\r\n    },\r\n    setInputText: text => ({\r\n        type: types.SET_INPUT_TEXT,\r\n        text\r\n    }),\r\n    clearInputText: () => ({\r\n        type: types.CLEAR_INPUT_TEXT\r\n    }),\r\n    addHistoryKeyword: keywordId => ({\r\n        type: types.ADD_HISTORY_KEYWORD,\r\n        text: keywordId\r\n    }),\r\n    clearHistoryKeywords: () => ({\r\n        type: types.CLEAR_HISTORY_KEYWORD\r\n    })\r\n}\r\n\r\nconst fetchPopularKeywords = endpoint => ({\r\n    [FETCH_DATA]: {\r\n        types: [\r\n            types.FETCH_POPULAR_KEYWORDS_REQUEST,\r\n            types.FETCH_POPULAR_KEYWORDS_SUCCESS,\r\n            types.FETCH_POPULAR_KEYWORDS_FAILURE\r\n        ],\r\n        schema,\r\n        endpoint\r\n    }\r\n})\r\n\r\nconst fetchRelatedKeywords = (endpoint, text) => ({\r\n    [FETCH_DATA]: {\r\n        types: [\r\n            types.FETCH_RELATED_KEYWORDS_REQUEST,\r\n            types.FETCH_RELATED_KEYWORDS_SUCCESS,\r\n            types.FETCH_RELATED_KEYWORDS_FAILURE\r\n        ],\r\n        schema,\r\n        endpoint\r\n    },\r\n    text\r\n})\r\n\r\n// popular Reducer\r\nconst popularKeywords = (state = initState.popularKeywords, action) => {\r\n    switch (action.type) {\r\n        case types.FETCH_POPULAR_KEYWORDS_REQUEST:\r\n            return {\r\n                ...state,\r\n                isFetching: true\r\n            }\r\n        case types.FETCH_POPULAR_KEYWORDS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                ids: state.ids.concat(action.response.ids)\r\n            }\r\n        case types.FETCH_POPULAR_KEYWORDS_FAILURE:\r\n            return {\r\n                ...state,\r\n                isFetching: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// related Reducer\r\nconst relatedKeywords = (state = initState.relatedKeywords, action) => {\r\n    switch (action.type) {\r\n        case types.FETCH_RELATED_KEYWORDS_REQUEST:\r\n        case types.FETCH_RELATED_KEYWORDS_SUCCESS:\r\n        case types.FETCH_RELATED_KEYWORDS_FAILURE:\r\n            return {\r\n                ...state,\r\n                [action.text]: relatedKeywordsByText(state[action.text], action)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// related的子reducer\r\nconst relatedKeywordsByText = (\r\n    state = { isFetching: false, ids: [] },\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case types.FETCH_RELATED_KEYWORDS_REQUEST:\r\n            return { ...state, isFetching: true }\r\n        case types.FETCH_RELATED_KEYWORDS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                ids: state.ids.concat(action.response.ids)\r\n            }\r\n        case types.FETCH_RELATED_KEYWORDS_FAILURE:\r\n            return { ...state, isFetching: false }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// inputText reducer\r\nconst inputText = (state = initState.inputText, action) => {\r\n    switch (action.type) {  \r\n        case types.SET_INPUT_TEXT:\r\n            return action.text\r\n        case types.CLEAR_INPUT_TEXT:\r\n            return ''\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// historyKeywords Reducer\r\nconst historyKeywords = (state = initState.historyKeywords, action) => {\r\n    switch (action.type) {\r\n        case types.ADD_HISTORY_KEYWORD:\r\n            // 避免添加重复的记录\r\n            const data = state.filter(item => item !== action.text)\r\n            return [action.text, ...data]\r\n        case types.CLEAR_HISTORY_KEYWORD:\r\n            return []\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst reducer = combineReducers({\r\n    popularKeywords,\r\n    relatedKeywords,\r\n    inputText,\r\n    historyKeywords\r\n})\r\n\r\nexport default reducer\r\n\r\n// selectors\r\nexport const getInputText = (state) => {\r\n    return state.search.inputText\r\n}\r\n\r\nexport const getPopularKeywords = (state) => {\r\n    let ids = state.search.popularKeywords.ids\r\n    if (ids) {\r\n        return ids.map(id => {\r\n            return getKeywordById(state, id)\r\n        })\r\n    } else {\r\n        return null\r\n    }\r\n}\r\n\r\nexport const getRelatedKeywords = state => {\r\n\r\n    const text = state.search.inputText;\r\n    if(!text || text.trim().length === 0) {\r\n        return [];\r\n    } \r\n    const relatedKeywords = state.search.relatedKeywords[text];\r\n    if(!relatedKeywords) {\r\n        return []\r\n    }\r\n    return relatedKeywords.ids.map(id => {\r\n        return getKeywordById(state, id)\r\n    })\r\n}\r\n\r\nexport const getHistoryKeywords = (state) => {\r\n\r\n    return state.search.historyKeywords.map(id => {\r\n        return getKeywordById(state, id)\r\n    })\r\n}","import { getProductDetail } from './entities/products'\r\nimport { actions as orderActions, AVAILABLE_TYPE } from \"./entities/orders\"\r\n\r\nexport const types = {\r\n    SET_ORDER_QUANTITY: 'PURCHASE/SET_ORDER_QUANTITY',\r\n    CLOSE_TIP: 'PURCHASE/CLOSE_TIP',\r\n    SUBMIT_ORDER_REQUEST: 'PURCHASE/SUBMIT_ORDER_REQUEST',\r\n    SUBMIT_ORDER_SUCCESS: 'PURCHASE/SUBMIT_ORDER_SUCCESS',\r\n    SUBMIT_ORDER_FAILURE: 'PURCHASE/SUBMIT_ORDER_FAILURE'\r\n}\r\n\r\nconst initState = {\r\n    quantity: 1,\r\n    showTip: false\r\n}\r\n\r\nexport const actions = {\r\n    setOrderQuantity: quantity => ({\r\n        type: types.SET_ORDER_QUANTITY,\r\n        quantity\r\n    }),\r\n    closeTip: () => ({\r\n        type: types.CLOSE_TIP\r\n    }),\r\n    //提交订单\r\n    submitOrder: productId => {\r\n        return (dispatch, getState) => {\r\n            // 1. 发送request请求\r\n            dispatch({ type: types.SUBMIT_ORDER_REQUEST })\r\n            return new Promise((resovle, reject) => {\r\n                setTimeout(() => {\r\n                    // 1. 获取产品id\r\n                    const product = getProductDetail(getState(), productId)\r\n                    // 2. 计算商品总价值\r\n                    const quantity = getState().purchase.quantity\r\n                    const totalPrice = (\r\n                        product.currentPrice * quantity\r\n                    ).toFixed(1)\r\n                    // 3. 填写其余字段\r\n                    const text1 = `${quantity}张 | 总价：${totalPrice}`\r\n                    const text2 = product.validityPeriod\r\n                    const order = {\r\n                        title: `${product.shop}:${product.product}`,\r\n                        orderPicUrl: product.picture,\r\n                        channel: '团购',\r\n                        statusText: '待消费',\r\n                        text: [text1, text2],\r\n                        type: AVAILABLE_TYPE\r\n                    }\r\n                    dispatch(orderActions.addOrder(order))\r\n                    dispatch({ type: types.SUBMIT_ORDER_SUCCESS })\r\n                    resovle()\r\n                }, 500)\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nconst reducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case types.SET_ORDER_QUANTITY:\r\n            return {\r\n                ...state,\r\n                quantity: action.quantity\r\n            }\r\n        case types.CLOSE_TIP:\r\n            return {\r\n                ...state,\r\n                showTip: false,\r\n            }\r\n        case types.SUBMIT_ORDER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                showTip: true,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer\r\n\r\n// selectors\r\nexport const getPurchaseQuantity = state => {\r\n    const purchase = state.purchase\r\n    if (purchase && purchase.quantity) {\r\n        return purchase.quantity\r\n    } else {\r\n        return null\r\n    }\r\n}\r\n\r\nexport const getTipStatus = state => {\r\n    const purchase = state.purchase\r\n    if (purchase && purchase.showTip) {\r\n        return purchase.showTip\r\n    } else {\r\n        return null\r\n    }\r\n}\r\n\r\nexport const getProduct = (state, id) => {\r\n    return getProductDetail(state, id)\r\n}","import React, { Component } from 'react'\r\nimport \"./style.css\"\r\n\r\nclass ErrorToast extends Component {\r\n    render() {\r\n        const { msg } = this.props\r\n        return (\r\n            <div className=\"errorToast\">\r\n                <div className=\"errorToast_text\">\r\n                    {msg}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timer = setTimeout(() => {\r\n            this.props.clearError()\r\n        }, 3000)\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (this.timer) {\r\n            clearTimeout(this.timer)\r\n        }\r\n    }\r\n}\r\n\r\nexport default ErrorToast\r\n","// actionTypes\nexport const types = {\n  CLEAR_ERROR: 'APP/CLEAR_ERROR'\n}\n\n// actionCreators\nexport const actions = {\n  clearError: () => ({\n    type: types.CLEAR_ERROR\n  })\n}\n\n// reducer\nconst reducer = (state = {}, action) => {\n    const { type, error } = action\n    if (type === types.CLEAR_ERROR) {\n        return {...state, error: null}\n    } else if (error) {\n        return {...state, error: error}\n    }\n    return state\n}\n\nexport default reducer\n\n// selectors\nexport const getError = (state) => {\n    return state.app.error\n}","import React, { Component } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { getLoginStatus } from '../../redux/modules/login'\r\n\r\nclass PrivateRoute extends Component {\r\n    render() {\r\n        const { component: Component, login, ...rest } = this.props\r\n        return (\r\n            <Route\r\n                {...rest}\r\n                render={props => {\r\n                    return login ? (\r\n                        <Component {...props} />\r\n                    ) : (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: '/login',\r\n                                state: { from: props.location }\r\n                            }}\r\n                        />\r\n                    )\r\n                }}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n    return {\r\n        login: getLoginStatus(state)\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null\r\n)(PrivateRoute)\r\n","import React, { Component } from 'react'\r\n\r\nexport default function asyncComponent(importComponent) {\r\n    class AsyncComponent extends Component {\r\n        constructor(props) {\r\n            super(props)\r\n            this.state = {\r\n                component: null\r\n            }\r\n        }\r\n\r\n        render() {\r\n            const C = this.state.component\r\n            return C ? <C {...this.props} /> : null\r\n        }\r\n\r\n        componentDidMount() {\r\n            importComponent().then((mod) => {\r\n                this.setState({\r\n                    component: mod.default\r\n                })\r\n            })\r\n        }\r\n    }\r\n    return AsyncComponent\r\n}","import React, { Component } from 'react'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport ErrorToast from '../../components/ErrorToast'\nimport { actions as appActions, getError } from '../../redux/modules/app'\nimport PrivateRoute from '../PrivateRoute'\nimport AsyncComponent from '../../utils/AsyncComponent'\nconst Home = AsyncComponent(() => import('../Home'))\nconst ProductDetail = AsyncComponent(() => import('../ProductDetail'))\nconst Search = AsyncComponent(() => import('../Search'))\nconst SearchResult = AsyncComponent(() => import('../SearchResult'))\nconst Login = AsyncComponent(() => import('../Login'))\nconst User = AsyncComponent(() => import('../User'))\nconst Purchase = AsyncComponent(() => import('../Purchase'))\n\nclass App extends Component {\n    render() {\n        const {\n            error,\n            appActions: { clearError }\n        } = this.props\n        return (\n            <div className=\"App\">\n                <Router>\n                    <Switch>\n                        <Route path=\"/login\" component={Login} />\n                        <PrivateRoute path=\"/user\" component={User} />\n                        <Route path=\"/detail/:id\" component={ProductDetail} />\n                        <Route path=\"/search\" component={Search} />\n                        <PrivateRoute path=\"/purchase/:id\" component={Purchase} />\n                        <Route path=\"/search_result\" component={SearchResult} />\n                        <Route path=\"/\" component={Home} />\n                    </Switch>\n                </Router>\n                {error ? (\n                    <ErrorToast msg={error} clearError={clearError} />\n                ) : null}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state, props) => {\n    return {\n        error: getError(state)\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        appActions: bindActionCreators(appActions, dispatch)\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(App)\n","import { combineReducers } from 'redux'\nimport products from './products'\nimport shops from './shops'\nimport orders from './orders'\nimport comments from './comments'\nimport keywords from './keywords'\n\n//合并领域状态\nconst rootReducer = combineReducers({\n    products,\n    shops,\n    orders,\n    comments,\n    keywords\n})\n\nexport default rootReducer\n","import { combineReducers } from 'redux'\nimport entities from './entities'\nimport home from './home'\nimport detail from './detail'\nimport search from './search'\nimport searchResult from './searchResult'\nimport login from './login'\nimport app from './app'\nimport user from './user'\nimport purchase from './purchase'\n\n//合并成根reducer\nconst rootReducer = combineReducers({\n    entities,\n    home,\n    detail,\n    app,\n    search,\n    searchResult,\n    login,\n    user,\n    purchase\n})\n\nexport default rootReducer","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport api from './middleware/api'\r\nimport rootReducer from './modules'\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk, api)))\r\n\r\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { Provider } from 'react-redux'\nimport App from './containers/App'\nimport store from './redux/store'\n\nReactDOM.render(\n<Provider store={store}>\n    <App />\n</Provider>, document.getElementById('root'))\n"],"sourceRoot":""}